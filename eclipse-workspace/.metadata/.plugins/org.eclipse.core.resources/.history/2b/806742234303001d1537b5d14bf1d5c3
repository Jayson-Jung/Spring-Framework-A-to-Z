package com.multicampus.controller.board;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.SessionAttributes;

import com.multicampus.biz.board.BoardService;
import com.multicampus.biz.board.BoardVO;

@Controller
// Model 객체에 "board"라는 이름으로 데이터가 등록될 때, 세션에도 똑같이 등록해라.
@SessionAttributes("board")
public class BoardController {
	
	@Autowired
	private BoardService boardService; // BoardService 타입의 BoardServiceImpl 객체 할당
	
	@RequestMapping("/insertBoardView.do")
	public String insertBoardView() throws Exception {
		return "insertBoard"; // View 이름 리턴
	}

	@RequestMapping("/insertBoard.do")
	public String insertBoard(BoardVO vo) throws Exception {
		boardService.insertBoard(vo);
		return "forward:getBoardList.do"; // View 이름 리턴
	}
	
	@RequestMapping("/updateBoard.do")
	// 세션에 "board"라는 이름으로 등록된 데이터가 있다면 우선 vo 변수에 할당해라.
	public String updateBoard(@ModelAttribute("board") BoardVO vo) throws Exception {
		boardService.updateBoard(vo);
		return "forward:getBoardList.do"; // View 이름 리턴
	}
	
	@RequestMapping("/deleteBoard.do")
	public String deleteBoard(BoardVO vo) throws Exception {
		boardService.deleteBoard(vo);
		return "forward:getBoardList.do"; // View 이름 리턴
	}
	
	@RequestMapping("/getBoard.do")
	public String getBoard(BoardVO vo, Model model) throws Exception {
		model.addAttribute("board", boardService.getBoard(vo));
		return "getBoard"; // 이동할 화면 정보 리턴
	}
	
	@RequestMapping("/getBoardList.do")
	public String getBoardList(BoardVO vo, Model model) throws Exception {
		// Null Check
		if(vo.getSearchCondition() == null) vo.setSearchCondition("TITLE");
		if(vo.getSearchKeyword() == null) vo.setSearchKeyword("");
		// 검색 결과를 model에 저장하면 자동으로 request 내장객체에 등록된다. 
		model.addAttribute("boardList", boardService.getBoardList(vo));
		return "getBoardList"; // 이동할 화면 정보 리턴	
	}
}

















