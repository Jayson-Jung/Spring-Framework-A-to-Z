package com.multicampus.controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.multicampus.biz.board.BoardDAO;
import com.multicampus.biz.board.BoardDAOJDBC;
import com.multicampus.biz.board.BoardVO;
import com.multicampus.biz.user.UserDAO;
import com.multicampus.biz.user.UserVO;

public class DispatcherServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

    public DispatcherServlet() {
        System.out.println("===> DispatcherServlet 생성");
    }

	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("EUC-KR");
		
		// 1. 사용자의 요청 path 정보를 추출한다.
		String uri = request.getRequestURI();
		String path = uri.substring(uri.lastIndexOf("/"));
		System.out.println(path);
		
		// 2. 추출된 path에 따라 로직을 분기처리한다. 
		if(path.equals("/login.do")) {
			System.out.println("로그인 인증 처리");
			
			// 1. 사용자 입력정보 추출
			String id = request.getParameter("id");
			String password = request.getParameter("password");
			
			// 2. DB 연동 처리
			UserVO vo = new UserVO();
			vo.setId(id);
			vo.setPassword(password);
			
			UserDAO userDAO = new UserDAO();
			UserVO user = userDAO.getUser(vo);
			
			// 3. 화면 이동
			if(user != null) {
				// 로그인 성공 시, 세션에 상태정보 저장
				HttpSession session = request.getSession();
				session.setAttribute("user", user);
				
				response.sendRedirect("getBoardList.do");
			} else {
				response.sendRedirect("login.jsp");
			}
			
		} else if(path.equals("/logout.do")) {
			System.out.println("로그아웃 처리");
			
			// 로그아웃 요청한 브라우저와 매핑된 세션을 강제 종료하고 인덱스 페이지로 이동한다. 
			HttpSession session = request.getSession();
			session.invalidate();
			response.sendRedirect("/");
			
		} else if(path.equals("/insertBoard.do")) {

		} else if(path.equals("/updateBoard.do")) {

		} else if(path.equals("/deleteBoard.do")) {

		} else if(path.equals("/getBoard.do")) {

		} else if(path.equals("/getBoardList.do")) {

		}
	}

}








